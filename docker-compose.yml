services:
  mcp-server:
    build: .
    image: transcript-extractor:latest
    restart: unless-stopped
    ports:
      - "${MCP_PORT:-8080}:${MCP_PORT:-8080}"
      - "${DEBUG_PORT:-5678}:${DEBUG_PORT:-5678}"
    volumes:
      - ${DOWNLOAD_DIR:-./downloads}:/app/downloads
      - ${MODEL_STORE_DIR:-./models}:/app/models
    environment:
      - PYTHONUNBUFFERED=1
      - MCP_TRANSPORT=http
      - MCP_HOST=${MCP_HOST:-0.0.0.0}
      - MCP_PORT=${MCP_PORT:-8080}
      - AUTH_SERVER_URL=${AUTH_SERVER_URL}
      - MCP_JWT_AUDIENCE=${MCP_JWT_AUDIENCE:-transcript-extractor}
      - MAX_WHISPER_MODEL=${MAX_WHISPER_MODEL:-base}
      - DEBUG_ENABLED=${DEBUG_ENABLED:-false}
      - DEBUG_PORT=${DEBUG_PORT:-5678}
      - DEBUG_WAIT=${DEBUG_WAIT:-false}
      - VALKEY_HOST=${VALKEY_HOST:-valkey}
      - VALKEY_PORT=${VALKEY_PORT:-6379}
      - VALKEY_DB=${VALKEY_DB:-1}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD}
      - VALKEY_USERNAME=${VALKEY_USERNAME}
      - DOWNLOAD_DIR=/app/downloads
      - MODEL_STORE_DIR=/app/models
      - WHISPERX_BATCH_SIZE=${WHISPERX_BATCH_SIZE:-16}
      - WHISPERX_COMPUTE_TYPE=${WHISPERX_COMPUTE_TYPE:-float16}
      - HF_TOKEN=${HF_TOKEN}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shared_valkey
      - services-network

networks:
  shared_valkey:
    external: true
    name: shared_valkey
  services-network:
    external: true

